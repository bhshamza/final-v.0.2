{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","render","style","textDecoration","length","alt","name","role","onClick","success","Footer","MetaData","title","Helmet","Product","product","col","images","url","_id","width","ratings","numOfReviews","price","Loader","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","error","productsCount","resPerPage","filteredProductsCount","params","useEffect","link","getProducts","count","marks","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","console","log","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","avatar","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.2e1ab5f1.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('http://localhost:4000/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('http://localhost:4000/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('http://localhost:4000/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user - ADMIN\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { useState } from 'react'\n\nconst Search = ({ history }) => {\n\n    const [keyword, setKeyword] = useState('');\n\n    const searchHandler = (e) => {\n        e.preventDefault()\n\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <form onSubmit={searchHandler} >\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    id=\"search_field\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Product Name ...\"\n                    onChange={(e) => setKeyword(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                    <button id=\"search_btn\" className=\"btn\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search\n","import React, { Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/logo.jpg\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                            <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={\"/images/default_avatar.jpg\"}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\n\nconst Footer = () => {\n    return (\n        <Fragment>\n            <footer className=\"py-1\">\n                <p className=\"text-center mt-1\">\n                    Shopping Cart - 2019-2020, All Rights Reserved\n                </p>\n            </footer>\n        </Fragment>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - ShopIT`}</title>\n        </Helmet>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\"> </div>\n    )\n}\n\nexport default Loader\n","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\n\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\n\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\n\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\n\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\n\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `http://localhost:4000/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `http://localhost:4000/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`http://localhost:4000/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData'\nimport Product from './product/Product'\nimport Loader from './layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = ({ match }) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Buy Best Products Online'} />\n\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n\n                            {keyword ? (\n                                <Fragment>\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                                        <div className=\"px-5\">\n                                            <Range\n                                                marks={{\n                                                    1: `$1`,\n                                                    1000: `$1000`\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={value => `$${value}`}\n                                                tipProps={{\n                                                    placement: \"top\",\n                                                    visible: true\n                                                }}\n                                                value={price}\n                                                onChange={price => setPrice(price)}\n                                            />\n\n                                            <hr className=\"my-5\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Categories\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {categories.map(category => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={category}\n                                                            onClick={() => setCategory(category)}\n                                                        >\n                                                            {category}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                            <hr className=\"my-3\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Ratings\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRating(star)}\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                            {products.map(product => (\n                                                <Product key={product._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            ) : (\n                                    products.map(product => (\n                                        <Product key={product._id} product={product} col={3} />\n                                    ))\n                                )}\n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst ListReviews = ({ reviews }) => {\n    return (\n        <div class=\"reviews w-75\">\n            <h3>Other's Reviews:</h3>\n            <hr />\n            {reviews && reviews.map(review => (\n                <div key={review._id} class=\"review-card my-3\">\n                    <div class=\"rating-outer\">\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\n                    </div>\n                    <p class=\"review_user\">by {review.name}</p>\n                    <p class=\"review_comment\">{review.comment}</p>\n\n                    <hr />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ListReviews\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\n\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n    const { data } = await axios.get(`http://localhost:4000/api/v1/product/${id}`)\n\n    dispatch({\n        type: ADD_TO_CART,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            price: data.product.price,\n            image: data.product.images[0].url,\n            stock: data.product.stock,\n            quantity\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n\n    dispatch({\n        type: REMOVE_ITEM_CART,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    })\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\n\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport { Carousel } from 'react-bootstrap'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport ListReviews from '../review/ListReviews'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\nimport { addItemToCart } from '../../actions/cartActions'\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductDetails = ({ match }) => {\n\n    const [quantity, setQuantity] = useState(1)\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    const { user } = useSelector(state => state.auth)\n    const { error: reviewError, success } = useSelector(state => state.newReview)\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (reviewError) {\n            alert.error(reviewError);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            alert.success('Reivew posted successfully')\n            dispatch({ type: NEW_REVIEW_RESET })\n        }\n\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\n\n    const addToCart = () => {\n        dispatch(addItemToCart(match.params.id, quantity));\n        alert.success('Item Added to Cart')\n    }\n\n    const increaseQty = () => {\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber >= product.stock) return;\n\n        const qty = count.valueAsNumber + 1;\n        setQuantity(qty)\n    }\n\n    const decreaseQty = () => {\n\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber <= 1) return;\n\n        const qty = count.valueAsNumber - 1;\n        setQuantity(qty)\n\n    }\n\n    function setUserRatings() {\n        const stars = document.querySelectorAll('.star');\n\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n\n        function showRatings(e) {\n            stars.forEach((star, index) => {\n                if (e.type === 'click') {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n\n                        setRating(this.starValue)\n                    } else {\n                        star.classList.remove('orange')\n                    }\n                }\n\n                if (e.type === 'mouseover') {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow');\n                    } else {\n                        star.classList.remove('yellow')\n                    }\n                }\n\n                if (e.type === 'mouseout') {\n                    star.classList.remove('yellow')\n                }\n            })\n        }\n    }\n\n    const reviewHandler = () => {\n        const formData = new FormData();\n\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', match.params.id);\n\n        dispatch(newReview(formData));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={product.name} />\n                    <div className=\"row d-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n                            <Carousel pause='hover'>\n                                {product.images && product.images.map(image => (\n                                    <Carousel.Item key={image.public_id}>\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\n                                    </Carousel.Item>\n                                ))}\n                            </Carousel>\n                        </div>\n\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{product.name}</h3>\n                            <p id=\"product_id\">Product # {product._id}</p>\n\n                            <hr />\n\n                            <div className=\"rating-outer\">\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n\n                            <hr />\n\n                            <p id=\"product_price\">${product.price}</p>\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\n\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\n\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\n                            </div>\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\n\n                            <hr />\n\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\n\n                            <hr />\n\n                            <h4 className=\"mt-2\">Description:</h4>\n                            <p>{product.description}</p>\n                            <hr />\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\n\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n                                Submit Your Review\n                            </button>\n                                :\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\n                            }\n\n\n                            <div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {product.reviews && product.reviews.length > 0 && (\n                        <ListReviews reviews={product.reviews} />\n                    )}\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProductDetails\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n            {shipping ? <Link to='shippping' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Shipping</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Shipping</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Confirm Order</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Confirm Order</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n            {payment ? <Link to='/payment' className=\"float-right\">\n                <div className=\"triangle2-active\"></div>\n                <div className=\"step active-step\">Payment</div>\n                <div className=\"triangle-active\"></div>\n            </Link> : <Link to=\"#!\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Payment</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>}\n\n        </div>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { Fragment, useState } from 'react'\nimport { countries } from 'countries-list'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingInfo } from '../../actions/cartActions'\n\nconst Shipping = ({ history }) => {\n\n    const countriesList = Object.values(countries)\n\n    const { shippingInfo } = useSelector(state => state.cart)\n\n    const [address, setAddress] = useState(shippingInfo.address)\n    const [city, setCity] = useState(shippingInfo.city)\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\n    const [country, setCountry] = useState(shippingInfo.country)\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\n        history.push('/confirm')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Shipping Info'} />\n\n            <CheckoutSteps shipping />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e) => setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e) => setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e) => setCountry(e.target.value)}\n                                required\n                            >\n\n                                {countriesList.map(country => (\n                                    <option key={country.name} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))}\n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Shipping\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useSelector } from 'react-redux'\n\nconst ConfirmOrder = ({ history }) => {\n\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { user } = useSelector(state => state.auth)\n\n    // Calculate Order Prices\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\n\n    const processToPayment = () => {\n        const data = {\n            itemsPrice: itemsPrice.toFixed(2),\n            shippingPrice,\n            taxPrice,\n            totalPrice\n        }\n\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\n        history.push('/payment')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n\n            <CheckoutSteps shipping confirmOrder />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p><b>Name:</b> {user && user.name}</p>\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems.map(item => (\n                        <Fragment>\n                            <hr />\n                            <div className=\"cart-item my-1\" key={item.product}>\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <hr />\n                        </Fragment>\n                    ))}\n\n\n\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\n                    </div>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ConfirmOrder\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\n\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\n\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\n\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('http://localhost:4000/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get curretly logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('http://localhost:4000/api/v1/orders/me')\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get order details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/order/${id}`)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all orders - ADMIN\nexport const allOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get(`http://localhost:4000/api/v1/admin/orders`)\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// update order\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:4000/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        const { data } = await axios.delete(`http://localhost:4000/api/v1/admin/order/${id}`)\n\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import React, { Fragment, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder, clearErrors } from '../../actions/orderActions'\n\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\n\nimport axios from 'axios'\n\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px'\n        },\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\n\nconst Payment = ({ history }) => {\n\n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth)\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\n    const { error } = useSelector(state => state.newOrder)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    const order = {\n        orderItems: cartItems,\n        shippingInfo\n    }\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n    if (orderInfo) {\n        order.itemsPrice = orderInfo.itemsPrice\n        order.shippingPrice = orderInfo.shippingPrice\n        order.taxPrice = orderInfo.taxPrice\n        order.totalPrice = orderInfo.totalPrice\n    }\n\n    const paymentData = {\n        amount: Math.round(orderInfo.totalPrice * 100)\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        document.querySelector('#pay_btn').disabled = true;\n\n        let res;\n        try {\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n\n            res = await axios.post('http://localhost:4000/api/v1/products/api/v1/payment/process', paymentData, config)\n\n            const clientSecret = res.data.client_secret;\n\n            console.log(clientSecret);\n\n            if (!stripe || !elements) {\n                return;\n            }\n\n            const result = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: elements.getElement(CardNumberElement),\n                    billing_details: {\n                        name: user.name,\n                        email: user.email\n                    }\n                }\n            });\n\n            if (result.error) {\n                alert.error(result.error.message);\n                document.querySelector('#pay_btn').disabled = false;\n            } else {\n\n                // The payment is processed or not\n                if (result.paymentIntent.status === 'succeeded') {\n\n                    order.paymentInfo = {\n                        id: result.paymentIntent.id,\n                        status: result.paymentIntent.status\n                    }\n\n                    dispatch(createOrder(order))\n\n                    history.push('/success')\n                } else {\n                    alert.error('There is some issue while payment processing')\n                }\n            }\n\n\n        } catch (error) {\n            document.querySelector('#pay_btn').disabled = false;\n            alert.error(error.response.data.message)\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Payment'} />\n\n            <CheckoutSteps shipping confirmOrder payment />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Card Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_num_field\">Card Number</label>\n                            <CardNumberElement\n                                type=\"text\"\n                                id=\"card_num_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                            <CardExpiryElement\n                                type=\"text\"\n                                id=\"card_exp_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                            <CardCvcElement\n                                type=\"text\"\n                                id=\"card_cvc_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n\n                        <button\n                            id=\"pay_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Payment\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport MetaData from '../layout/MetaData'\n\nconst OrderSuccess = () => {\n    return (\n        <Fragment>\n\n            <MetaData title={'Order Success'} />\n\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 mt-5 text-center\">\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n                    <h2>Your Order has been placed successfully.</h2>\n\n                    <Link to=\"/orders/me\">Go to Orders</Link>\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrderSuccess\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\n\nconst OrderDetails = ({ match }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                            <h4 className=\"mb-4\">Shipping Info</h4>\n                            <p><b>Name:</b> {user && user.name}</p>\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                            <p><b>Amount:</b> ${totalPrice}</p>\n\n                            <hr />\n\n                            <h4 className=\"my-4\">Payment</h4>\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Status:</h4>\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n                            <h4 className=\"my-4\">Order Items:</h4>\n\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                {orderItems && orderItems.map(item => (\n                                    <div key={item.product} className=\"row my-5\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                        </div>\n\n                                        <div className=\"col-5 col-lg-5\">\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                        </div>\n\n\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                            <p>${item.price}</p>\n                                        </div>\n\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} Piece(s)</p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default OrderDetails\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n    }\n\n    const onChange = e => {\n        if (e.target.name === 'avatar') {\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n        } else {\n            setUser({ ...user, [e.target.name]: e.target.value })\n        }\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"iamges/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Register\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nconst Profile = () => {\n\n    const { user, loading } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Your Profile'} />\n\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                        <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={\"/images/default_avatar.jpg\"} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined On</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"new_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Sidebar = () => {\n    return (\n        <div className=\"sidebar-wrapper\">\n            <nav id=\"sidebar\">\n                <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\n                    </li>\n\n                    <li>\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-product-hunt\"></i> Products</a>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\n                            </li>\n\n                            <li>\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\n                            </li>\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAdminProducts } from '../../actions/productActions'\nimport { allOrders } from '../../actions/orderActions'\nimport { allUsers } from '../../actions/userActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const { products } = useSelector(state => state.products)\n    const { users } = useSelector(state => state.allUsers)\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\n\n    let outOfStock = 0;\n    products.forEach(product => {\n        if (product.stock === 0) {\n            outOfStock += 1;\n        }\n    })\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(allOrders())\n        dispatch(allUsers())\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <h1 className=\"my-4\">Dashboard</h1>\n\n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'} />\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Fragment>\n                    )}\n\n                </div>\n            </div>\n\n        </Fragment >\n    )\n}\n\nexport default Dashboard\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst ProductsList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products);\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Product deleted successfully');\n            history.push('/admin/products');\n            dispatch({ type: DELETE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        products.forEach(product => {\n            data.rows.push({\n                id: product._id,\n                name: product.name,\n                price: `$${product.price}`,\n                stock: product.stock,\n                actions: <Fragment>\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Products'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Products</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst UpdateProduct = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n\n    const productId = match.params.id;\n\n    useEffect(() => {\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock)\n            setOldImages(product.images)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully');\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Update Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                 </label>\n                                    </div>\n\n                                    {oldImages && oldImages.map(img => (\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    UPDATE\n                            </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'No of Items',\n                    field: 'numofItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numofItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions: <Fragment>\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Orders</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setOrders()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst ProcessOrder = ({ match }) => {\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData))\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        {loading ? <Loader /> : (\n                            <div className=\"row d-flex justify-content-around\">\n                                <div className=\"col-12 col-lg-7 order-details\">\n\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\n\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p><b>Name:</b> {user && user.name}</p>\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                    <p><b>Amount:</b> ${totalPrice}</p>\n\n                                    <hr />\n\n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                                    <h4 className=\"my-4\">Stripe ID</h4>\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\n\n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n\n                                    <h4 className=\"my-4\">Order Items:</h4>\n\n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems && orderItems.map(item => (\n                                            <div key={item.product} className=\"row my-5\">\n                                                <div className=\"col-4 col-lg-2\">\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                </div>\n\n                                                <div className=\"col-5 col-lg-5\">\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                </div>\n\n\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                    <p>${item.price}</p>\n                                                </div>\n\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                    <p>{item.quantity} Piece(s)</p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <hr />\n                                </div>\n\n                                <div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name='status'\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\n                                        Update Status\n                                    </button>\n                                </div>\n\n                            </div>\n                        )}\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions: <Fragment>\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Users</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\n\nconst UpdateUser = ({ history, match }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n\n        console.log(user && user._id !== userId);\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={`Update User`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"name\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        name='name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"role_field\">Role</label>\n\n                                    <select\n                                        id=\"role_field\"\n                                        className=\"form-control\"\n                                        name='role'\n                                        value={role}\n                                        onChange={(e) => setRole(e.target.value)}\n                                    >\n                                        <option value=\"user\">user</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (isAdmin === true && user.role !== 'admin') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    newProduct: newProductReducer,\n    product: productReducer,\n    productReviews: productReviewsReducer,\n    review: reviewReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer\n})\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;","import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const productsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case ALL_PRODUCTS_REQUEST:\n        case ADMIN_PRODUCTS_REQUEST:\n            return {\n                loading: true,\n                products: []\n            }\n\n        case ALL_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                productsCount: action.payload.productsCount,\n                resPerPage: action.payload.resPerPage,\n                filteredProductsCount: action.payload.filteredProductsCount\n            }\n\n        case ADMIN_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n\n        case ALL_PRODUCTS_FAIL:\n        case ADMIN_PRODUCTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case NEW_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_PRODUCT_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload.success,\n                product: action.payload.product\n            }\n\n        case NEW_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_PRODUCT_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_PRODUCT_REQUEST:\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n\n        case DELETE_PRODUCT_FAIL:\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                product: action.payload\n            }\n\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const newReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_REVIEW_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload\n            }\n\n        case NEW_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_REVIEW_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const productReviewsReducer = (state = { review: [] }, action) => {\n    switch (action.type) {\n\n        case GET_REVIEWS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_REVIEWS_SUCCESS:\n            return {\n                loading: false,\n                reviews: action.payload\n            }\n\n        case GET_REVIEWS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const reviewReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case DELETE_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_REVIEW_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\n    switch (action.type) {\n\n        case ADD_TO_CART:\n            const item = action.payload;\n\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\n\n            if (isItemExist) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case REMOVE_ITEM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\n            }\n\n\n        case SAVE_SHIPPING_INFO:\n            return {\n                ...state,\n                shippingInfo: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_ORDER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\n\nimport Home from './components/Home'\nimport ProductDetails from './components/product/ProductDetails'\n\n// Cart Imports\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders'\nimport OrderDetails from './components/order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\nimport ForgotPassword from './components/user/ForgotPassword'\nimport NewPassword from './components/user/NewPassword'\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard'\nimport ProductsList from './components/admin/ProductsList'\nimport NewProduct from './components/admin/NewProduct'\nimport UpdateProduct from './components/admin/UpdateProduct'\nimport OrdersList from './components/admin/OrdersList'\nimport ProcessOrder from './components/admin/ProcessOrder'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\nimport ProductReviews from './components/admin/ProductReviews'\n\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport axios from 'axios'\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('http://localhost:4000/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n        </div>\n\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <Provider store={store} >\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}